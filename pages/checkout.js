import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import Script from "next/script";
import React, { useEffect, useState } from "react";
import { AiOutlineMinusCircle, AiOutlinePlusCircle } from "react-icons/ai";

const Checkout = ({cart, addToCart, removeFromCart,subTotal,clearCart, userData}) => {
  const [formData, setformData] = useState()
  const handleChange = (e) => {
    const {name,value} = e.target

    if(name === "pincode" && value?.length === 6){
      axios.get(`https://api.postalpincode.in/pincode/${value}`).then(res =>{
        setformData({...formData, city : res?.data?.[0]?.PostOffice?.[0]?.District, state : res?.data?.[0]?.PostOffice?.[0]?.State, [name] : value})

      })
    }else{
      setformData({...formData, city : "", state : "", [name] : value})
    }
  }
useEffect(() => {
  if(userData) setformData({...formData, email: userData.email})
}, [userData])



  console.log("formData",formData)
  const checkout = (e) => {
    const body ={
      amount: subTotal,
      email: formData.email,
      products :cart,
      address : formData.address
    }
    axios.post(`${process.env.NEXT_PUBLIC_API_URL}api/payment/checkout`, body).then((response) => {
      console.log("prder created",response, typeof response?.data?.order?.amount);
      var options = {
        key: process.env.PAYMENT_API_KEY, 
        amount: response?.data?.order?.amount, 
        currency: "INR",
        name: "Gauran Ghadiya",
        description: "Test Transaction",
        image: "https://media.licdn.com/dms/image/C4D03AQEgTqpEREcAeA/profile-displayphoto-shrink_800_800/0/1628130809488?e=2147483647&v=beta&t=5SJkdy1bIpoyDCumi1Cl0bi8h8D2mBjucQaqFx4ivjY",
        order_id: response?.data?.order?.id,
        callback_url: `${process.env.NEXT_PUBLIC_API_URL}api/payment/paymentVerification`,
        prefill: {
            name: formData?.name,
            email: formData?.email,
            contact: formData?.phone
        },
        notes: {
            address: formData?.address
        },
        theme: {
            color: "#3399cc"
        }
    };
    var rzp1 = new window.Razorpay(options);
    rzp1.open();
    // e.preventDefault();

    })
  }
  return (
    <>    <Head>
    <title>Create Next App</title>
    <meta name="description" content="Generated by create next app" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" href="/favicon.ico" />
  </Head>
  <Script src="https://checkout.razorpay.com/v1/checkout.js" />

    <div className="container  mx-auto">
      <h1 className=" font-semibold text-center my-7 text-2xl">Checkout</h1>
      <h2 className="font-semibold my-2">1. Delivery Details</h2>
      <div className="flex mx-auto">
        <div className="px-2 w-1/2">
          <div class=" mb-4">
            <label for="name" class=" required leading-7 text-sm text-gray-600">
              Name
            </label>
            <input
            value={formData?.name}
            onChange={handleChange}
              type="name"
              id="name"
              name="name"
              class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
            />
          </div>
        </div>
        <div className="px-2 w-1/2">
          <div class=" mb-4">
            <label for="email" class=" required leading-7 text-sm text-gray-600">
              Email
            </label>
            <input
             value={formData?.email}
             onChange={handleChange}
             disabled
              type="email"
              id="email"
              name="email"
              class="disabled:bg-gray-100 w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
            />
          </div>
        </div>
      </div>
      <div className="flex mx-auto">

        <div className="px-2 w-full">
        <div class="mb-4">
        <label for="address" class="leading-7 text-sm text-gray-600 required">Address</label>
        <textarea  value={formData?.address}
            onChange={handleChange} id="address" name="address" class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 h-32 text-base outline-none text-gray-700 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out"></textarea>
      </div>
        </div>
</div>
      <div className="flex mx-auto">
        <div className="px-2 w-1/2">
          <div class=" mb-4">
            <label for="phone" class="leading-7 text-sm text-gray-600 required">
              Phone
            </label>
            <input
             value={formData?.phone}
             onChange={handleChange}
              type="phone"
              id="phone"
              name="phone"
              class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
            />
          </div>
        </div>
        <div className="px-2 w-1/2">
          <div class=" mb-4">
            <label for="pincode" class="leading-7 text-sm text-gray-600 required">
              Pincode
            </label>
            <input
             value={formData?.pincode}
             onChange={handleChange}
              type="pincode"
              id="pincode"
              name="pincode"
              class="w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
            />
          </div>
        </div>
      
      </div>
      <div className="flex mx-auto">
        <div className="px-2 w-1/2">
          <div class=" mb-4">
            <label for="city" class="leading-7 text-sm text-gray-600">
              City
            </label>
            <input
              value={formData?.city}
              onChange={handleChange}
              type="city"
              disabled
              id="city"
              name="city"
              class="disabled:bg-gray-100 w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
            />
          </div>
        </div>
        
        <div className="px-2 w-1/2">
          <div class=" mb-4">
            <label for="state" class="leading-7 text-sm text-gray-600">
              State
            </label>
            <input
              value={formData?.state}
              onChange={handleChange}
              type="state"
              disabled
              id="state"
              name="state"
              class="disabled:bg-gray-100 w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
            />
          </div>
        </div>

      </div>

      <h2 className="font-semibold my-2">2. Review Cart Items & Pay</h2>
      <div className="bg-white  shadow-md p-6  ">
         
          <div className="my-7">
            <ul className="list-decimal">{
              Object.keys(cart)?.length == 0 && <div className="font-semibold text-center tex-black">Opps!, Your Cart is empty</div>
            }
              {Object.keys(cart)?.length > 0 && Object.keys(cart)?.map((v,i) => {
                return <li className="my-3 flex items-center justify-between tex-black" key={v}>
                <div className="flex ">
                  <div>{i+1}.</div>
                  <div className="mx-2 tex-black">{cart[v]?.name} </div>
                </div>
                <div className="flex items-center justify-between">
                  <AiOutlinePlusCircle onClick={() => addToCart(cart[v]?.itemCode, 1,cart[v]?.price,cart[v]?.name,cart[v]?.size,cart[v]?.variant )} className="cursor-pointer" />
                  <span className="mx-2">{cart[v]?.qty}</span>
                  <AiOutlineMinusCircle onClick={() => removeFromCart(cart[v]?.itemCode, 1,cart[v]?.price,cart[v]?.name,cart[v]?.size,cart[v]?.variant )} className="cursor-pointer" />
                </div>
              </li>
              })}
            </ul>
          </div>
          <div className="font-bold">Subtotal : ₹{subTotal}</div>
          <div className="flex align-middle">
            <button onClick={checkout} className="flex mx-auto mt-6  text-white bg-black border-0 py-2 px-6 focus:outline-none hover:bg-black rounded text-lg shadow-md text-sm">
              Pay ₹{subTotal}
            </button>
           
          </div>
        </div>
    </div></>

  );
};

export default Checkout;
